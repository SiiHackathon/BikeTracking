@model BikeTracker.Models.ManageLoginsViewModel
@using Microsoft.Owin.Security
@{
    ViewBag.Title = "Manage your external logins";
}

<h1 class="page-title">@ViewBag.Title</h1>
@if (ViewBag.Subtitle != "")
{
	<h3 class="page-subtitle">@ViewBag.Subtitle</h3>
}

@if (ViewBag.StatusMessage != "")
{
	<div class="row">
		<div class="col-md-8">
			<section class="bs-component">
				<div class="alert alert-success">
					@ViewBag.StatusMessage
				</div>
			</section>
		</div>
	</div>
}

@{
    var loginProviders = Context.GetOwinContext().Authentication.GetExternalAuthenticationTypes();
    if (loginProviders.Count() == 0) {
		<div class="row">
			<div class="col-md-8">
				<section class="bs-component">
					<div class="alert alert-info">
						There are no external authentication services configured. See <a href="http://go.microsoft.com/fwlink/?LinkId=313242" target="_blank">this article</a>
						for details on setting up this ASP.NET application to support logging in via external services.
					</div>
				</section>
			</div>
		</div>
    }
    else
    {
        if (Model.CurrentLogins.Count > 0)
        {
            <h3>Registered Logins</h3>
			
            <table class="table table-striped table-hover">
                <tbody>
                    @foreach (var account in Model.CurrentLogins)
                    {
                        <tr>
                            <th>@account.LoginProvider</th>
                            <td>
                                @if (ViewBag.ShowRemoveButton)
                                {
                                    using (Html.BeginForm("RemoveLogin", "Manage"))
                                    {
                                        @Html.AntiForgeryToken()
                                        <div>
                                            @Html.Hidden("loginProvider", account.LoginProvider)
                                            @Html.Hidden("providerKey", account.ProviderKey)
                                            <input type="submit" class="btn btn-default btn-raised" value="Remove" title="Remove this @account.LoginProvider login from your account" />
                                        </div>
                                    }
                                }
                                else
                                {
                                    @: &nbsp;
                                }
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        }
        if (Model.OtherLogins.Count > 0)
        {
            using (Html.BeginForm("LinkLogin", "Manage", FormMethod.Post, new { @class = "form-horizontal well well-lg", role = "form" }))
            {
                @Html.AntiForgeryToken()
                <div id="socialLoginList">
					<p>
						@foreach (AuthenticationDescription p in Model.OtherLogins)
						{
							<button type="submit" class="btn btn-default btn-raised" id="@p.AuthenticationType" name="provider" value="@p.AuthenticationType" title="Log in using your @p.Caption account">@p.AuthenticationType</button>
						}
					</p>
                </div>
            }
        }
    }
}
